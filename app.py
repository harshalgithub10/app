import os
import io
import glob
import re
import json
import pytesseract
from PIL import Image
from flask import Flask, request, send_file, jsonify

app = Flask(__name__)

# Define patterns for keys and their corresponding regex patterns
key_patterns = {
    "Bill From": r"Bill From\n(.+?)\n",
    "Ship To": r"Ship To :\n(.+?)\n",
    "Bill To": r"Bill To\n(.+?)\n",
    "Invoice Number": r"INVOICE NUMBER : (.+?) ",
    "Invoice Date": r"INVOICE DATE : (.+?) ",
    "Total Amount": r"Total Amount (.+?)\n",
    "CGST": r"CGST @(.+?)%",
    "SGST": r"SGST @(.+?)%",
    "Grand Total": r"Grand Total (.+?)\n",
    "Due Date": r"Due Date: (.+?)\n",
    "Interest": r"Interest'@ (.+?)%",
    "Document No": r"Document N0 : (.+?)",
    "Document Date" : r"Document Date : (.+?) ",
    "IRN" : r"IRN : (.+?)\n",
    "Generated By" : r"Generated By : (.+?) ",
    "CIN" : r"CIN : (>+?) " ,
    "IGST" : r"IGST : (.+?)",
    "Invoice No" : r"Invoice No : (.+?)\n",
    "State code" : r"State code : (.+?)\n",
    "IGST" : r"IGST : (.+?)",
    "Ack No" : r"Ack No : (.+?)",
    "Ack Date" : r"Ack Date : (.+?)",
    "Document Type" : r"Document Type : (.+?)",
    # Add the rest of your patterns here
}

@app.route('/extract-invoice', methods=['POST'])
def extract_invoice():
    if 'image' not in request.files:
        return jsonify({'error': 'No image provided'}), 400

    img_file = request.files['image']
    if img_file.filename == '':
        return jsonify({'error': 'No selected image'}), 400

    img_format = img_file.filename.split('.')[-1]
    if img_format not in ['jpg', 'jpeg', 'png']:
        return jsonify({'error': 'Invalid image format. Please use jpg, jpeg or png.'}), 400

    img = Image.open(img_file)
    text = pytesseract.image_to_string(img, lang='eng')

    # Extract values corresponding to keys using regular expressions
    data = {}
    for key, pattern in key_patterns.items():
        match = re.search(pattern, text)
        if match:
            data[key] = match.group(1).strip()

    # Write the extracted data to a JSON file
    output_file = 'invoice_details.json'
    with open(output_file, 'w') as json_file:
        json.dump(data, json_file, indent=4)

    return send_file(output_file, as_attachment=True)

if __name__ == '__main__':
    app.run(debug=True)
